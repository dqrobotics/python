name: Python Package

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        experimental: [false]
#        include:
#        - os: 'macos-11'
#          experimental: true
#          python-version: 3.9
#        - python-version: '3.10'
#          os: 'ubuntu-latest'
#          experimental: true
#        - python-version: '3.10'
#          os: 'macos-latest'
#          experimental: true

    steps:
    - uses: actions/checkout@v2
    - name: Customize git
      run: |
        git submodule update --init --recursive
        git fetch --prune --unshallow
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install compilation dependencies [Ubuntu/C++]
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt install libeigen3-dev
    - name: Install compilation dependencies [MacOS/C++]
      if: matrix.os == 'macos-latest' || matrix.os == 'macos-11'
      run: |
        brew install eigen
    - name: Install compilation dependencies [Windows/C++]
      if: matrix.os == 'windows-latest'
      run: |
        pwd
        echo "Setting up vcpkg..."
        cd C:\vcpkg
        .\bootstrap-vcpkg.bat
        vcpkg integrate install
        echo "Installing eigen3..."
        .\vcpkg install eigen3:x64-windows
        echo "Adding symlink to vcpkg..."
        cmd /c mklink /d c:\Tools\vcpkg c:\vcpkg
        cd ~
    - name: Install compilation dependencies [Python]
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel setuptools-git
    - name: Compile
      run: |
        python setup.py bdist_wheel
    - name: Remove build folder (Ubuntu & MacOS)
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      run: |
        rm -rf build
    - name: Remove build folder (Windows only)
      if: matrix.os == 'windows-latest'
      run: |
        rm -r -fo build
    - name: Rename wheel (MacOS only)
      if: matrix.os == 'macos-latest'
      run: |
        brew install rename
        cd dist
        sw_vers
        rename 's/11_0/10_14/' *
        cd ..
    - name: Install (Ubuntu and MacOS)
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      run: |
        python tests/print_platform_info.py
        python -m pip install dist/*.whl
    - name: Install (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        python tests/print_platform_info.py
        python -m pip install @(join-path "dist" (get-childitem -path dist -name *.whl))
    - name: Test
      run: |
        cd tests
        python -m pip install scipy quadprog
        python DQ_test.py
        python DQ_Kinematics_test.py
        python cpp_issues.py
        python python_issues.py
        cd ..
    - name: Rename wheel (Ubuntu only)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt install rename
        cd dist
        rename 's/linux/manylinux1/' *
        cd ..
    - name: Publish to PyPi
      env:
        TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      if: github.ref == 'refs/heads/master'
      run: |
        python -m pip install twine
        twine upload dist/*

